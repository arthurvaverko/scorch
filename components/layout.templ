package components
import "fmt"

type GameState struct {
	StoryLines []string
	Character  Character
}

type Character struct {
	Name    string
	HP      int
	MaxHP   int
	Mana    int
	MaxMana int
}

templ Layout(state GameState) {
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>Adventure Game</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <style>
            html {
                --game-primary: #E87C65;
                --game-secondary: #7CC9D6;
                --game-tertiary: #8B5E3C;
                --game-bg: #2A4858;
                --game-ui-base: #9B8B7A;
                --game-ui-darker: #786D5F;
            }
        </style>
    </head>
    <body>
        @gameLayout(state)
    </body>
    </html>
}

templ gameLayout(state GameState) {
    <div class="min-h-screen flex flex-col p-3 max-w-md mx-auto" style="background-color: var(--game-ui-base)">
        @storyText(state.StoryLines)
        @sceneImage()
        <div class="grid grid-cols-2 gap-3 mt-6">
            @characterStats(state.Character)
            @actionButtons()
        </div>
    </div>
}

templ storyText(lines []string) {
    <div class="mb-2 space-y-0.5 rounded-lg p-4" style="background-color: var(--game-ui-darker)">
        for _, line := range lines {
            <p class="text-base leading-snug text-white font-medium">{ line }</p>
        }
    </div>
}

templ sceneImage() {
    <div class="flex-1 mb-3 mx-3 relative h-[50vh]">
        <div class="absolute inset-0 flex items-center justify-center overflow-hidden rounded-lg">
            <img src="https://fastly.picsum.photos/id/57/2448/3264.jpg?hmac=ewraXYesC6HuSEAJsg3Q80bXd1GyJTxekI05Xt9YjfQ" alt="Current scene" class="w-full h-full object-cover"/>
            <div class="absolute inset-0 bg-gradient-to-b from-transparent via-transparent to-[var(--game-ui-base)]"></div>
        </div>
    </div>
}

templ characterStats(char Character) {
    <div class="p-4 flex flex-col items-center relative rounded-lg" style="background-color: var(--game-ui-darker)">
        <div class="absolute -top-6 w-28 h-28">
            <div class="w-full h-full rounded-full overflow-hidden border-4" style="border-color: var(--game-ui-darker)">
                <img src="https://fastly.picsum.photos/id/237/200/300.jpg?hmac=TmmQSbShHz9CdQm0NkEjx1Dyh_Y984R9LpNrpvH2D_U" alt="Character portrait" class="w-full h-full object-cover"/>
            </div>
        </div>
        
        <div class="w-full mt-20 mb-2 text-center">
            <h2 class="text-white text-lg font-medium">{ char.Name }</h2>
        </div>

        <div class="w-full">
            @statBar("HP", char.HP, char.MaxHP, "var(--game-primary)")
            @statBar("Mana", char.Mana, char.MaxMana, "var(--game-secondary)")
        </div>
    </div>
}


css statBarFill(percent float32, color string) {
	width: { templ.SafeCSSProperty(fmt.Sprintf("%v%%", percent)) };
    background-color: {templ.SafeCSSProperty(color)};
}

templ statBar(label string, current int, max int, color string) {
    <div class="w-full mb-2">
        <div class="flex items-center gap-1 mb-1">
            <span class="text-xs text-white">{ label }: { fmt.Sprint(current) }/{ fmt.Sprint(max) }</span>
        </div>
        <div class="w-full h-3 bg-black/20 rounded-full overflow-hidden">
            <div 
                class={"h-full", "transition-all", "duration-300", statBarFill((float32(current) / float32(max) * 100), color)}
            ></div>
        </div>
    </div>
}



templ actionButtons() {
    <div class="grid grid-rows-5 gap-2">
        @actionButton("Attack")
        @actionButton("Defend")
        @actionButton("Magic")
        @actionButton("Heal")
        @actionButton("Custom")
    </div>
}

templ actionButton(label string) {
    <button 
        class="rounded-lg p-2.5 flex items-center justify-center gap-2 text-sm transition-colors hover:brightness-110"
        style="background-color: var(--game-ui-darker); color: white;"
    >
        { label }
    </button>
}